# ====================================================================
# Spring Boot Application Properties
# ====================================================================

# --------------------------------------------------------------------
# Server Configuration
# --------------------------------------------------------------------
server.port=8080

# --------------------------------------------------------------------
# Database Configuration (for Supabase PostgreSQL)
# --------------------------------------------------------------------
# Supabase provides connection details as environment variables.
# You MUST set these environment variables on your deployment platform (e.g., Railway, Render, etc.).
#
# Based on the Supabase details you provided, these are the values you should set:
# DB_HOST=db.pziimriahurwulzyjipa.supabase.co
# DB_PORT=5432
# DB_USER=postgres
# DB_PASSWORD=91X6RrIhh6exvCX0
# DB_DATABASE=postgres
#
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
# Optionally, you can explicitly define the driver class name, though Spring Boot often infers it
spring.datasource.driver-class-name=org.postgresql.Driver

# --------------------------------------------------------------------
# JPA / Hibernate Configuration
# --------------------------------------------------------------------
# 'update' is useful for development as it updates schema based on entities.
# For production, consider 'none' or 'validate' and use migration tools (Flyway/Liquibase).
spring.jpa.hibernate.ddl-auto=update
# Show SQL queries in the logs, useful for debugging database interactions.
spring.jpa.show-sql=true
# Specify the Hibernate dialect for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --------------------------------------------------------------------
# Static Resource Handling (for uploaded files)
# --------------------------------------------------------------------
# This property tells Spring Boot to look for static resources in the './uploads/' directory.
# 'file:' prefix indicates a file system path. On Railway, './uploads/' resolves to /app/uploads/.
# This works in conjunction with the WebConfig.java class.
spring.web.resources.static-locations=file:./uploads/

# --------------------------------------------------------------------
# Multipart (File Upload) Configuration
# --------------------------------------------------------------------
# Maximum file size for individual file uploads (e.g., 10MB)
spring.servlet.multipart.max-file-size=10MB
# Maximum request size (total size of all parts in a multipart request, e.g., 10MB)
spring.servlet.multipart.max-request-size=10MB

# --------------------------------------------------------------------
# General Application Properties (Optional)
# --------------------------------------------------------------------
# You can add other properties specific to your application here if needed.